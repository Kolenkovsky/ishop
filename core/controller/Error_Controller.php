<?php
defined('SHOP') or exit('Access denied');
/*Создадим класс который и будет заниматься выводом ошибок на экран*/
class Error_Controller extends Base_Error {

    protected function input($param = array()) {//принимает параметры которые приходят на наш сайт
        
        parent::input();
        
        /*создадим пустую переменную $er ,которая нам понадобится для сохранения строки,которую мы
        запишем в файл logo.php*/
        $er = '';
        
        $arr = array();//тут сохраним очищенную строку из $param см.ниже в цикле
        
        /*теперь проверим существует ли $param  и есть ли там ячейка mes которую мы передаем при формировании
        заголовка в классе ContrException*/
        if(isset($param['mes'])) {
            /*если есть,то для универсальности, можно было бы просто без цикла,но вдруг кроме параметра mes
            нам понадобьятся еще какието*/
            foreach($param as $key => $val) {
                $val = $this->clear_str(urldecode($val));//очистим строку т.к. она передается через адр.строку и она закодирована у нас 
                /*теперь создадим в массиве $arr произвольную ячейку и сохраним там очищен.значение $val*/
                $arr[] = $val;
                //и теперь формируем нашу строку $er
                $er .= $key.' - '.$val.'|';  
            }
            /*еще проверим есть ли еще данные по линии  и имени файла в котором ошибка,это из ContrException
            и добавляем в сформированую строку еще и файл и линию*/
            if($_SESSION['error']) {
                foreach($_SESSION['error'] as $k => $v) {
                    $er .= $k.' - '.$v.'|';    
                }    
            }
            
            unset($_SESSION['error']);//Обнулим сессию,чтобы в следующей ошибке не выводилисб старые данные
            
            //теперь сформируем свойство $error описанное в классе Base_Controller
            $this->error = $er;//т.е. запишем туда сформированую строку об ошибке
            /*и сформируем свойство $message_err*/
            $this->message_err = $arr;//т.е. значение $val из $param   
        }
    }
    
    protected function output() {
               
        $this->page = parent::output();
        return $this->page;
    }    
}

?>