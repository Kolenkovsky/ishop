<?php
defined('SHOP') or exit('Access denied');
/*создадим контролер который будет выводить страницу авторизации его делаем наследником класса Dase 
а не Base_Admin для того что бы все имели доступ к этой странице авторизации,в принципе,можно сделать
и наследником Base_Admin*/
class Login_Controller extends Base {
    
    protected $ob_us;//тут обьект класса Model_User
    
    protected function input($param = array()) {        
        
        parent::input();
            
        //теперь получим и сохраним в нашем свойстве,обьект класса Model_User
        $this->ob_us = Model_User::get_instance();
        
        //////////////////для выхода из админки пропишем для ссылки Выйти//////////////////
        //проверим если есть в $param ячейка logout то мы ее очистим
        if(isset($param['logout'])) {
            //создадим переменную и сохраним туда очиченную строку ячейки(от злоумышлеников)
            $logout = $this->clear_int($param['logout']);
            //если после этого там есть данные то обратимся к методу logout
            if($logout) {
               $res = $this->ob_us->logout();
               //и если все нормально метод отработал то перенаправим на главную страницу
               if($res) {
                    header("Location:".SITE_URL);
                    exit(); 
               }    
            }    
        }
        /////////////////////////////////////////////////////////////////////////////////// 
        
        ////////////////////////////////////////////////////////////////////////////////
        /*Создадим переменную по которой будем очищать записи устаревшие о блокировке пользователя
        после определенного времени*/
        $time_clean = time() - (3600 * 24 * FEALT);//перевели дни в секунды
        
        //вызовем метод из Model_User который будет очищать запись
        $this->ob_us->clean_fealtures($time_clean);
               
        /*для блокировки пользователя после трех неверных попыток сохраним его ip адресс*/
        $ip_u = $_SERVER['REMOTE_ADDR'];
        /*теперь создадим переменную и сохраним там количество неправильных попыток пользователя
        с этим id ,для этого обратимся к методу Model_User get_fealtures*/
        $fealtures = $this->ob_us->get_fealtures($ip_u);
        /////////////////////////////////////////////////////////////////////////////
        
        /*метододом is_post из Base_Cotroller проверим пришли данные методом post или нет*/
        if($this->is_post()) {
            /*теперь проверим ввел ли пользователь все данные,т.е.логин и пароль т.е есть ли такие ячейки в массиве $_POST*/
            if(isset($_POST['name']) && isset($_POST['password']) && $fealtures < 3) {
                                        
                //если да то создаем переменную $name и присваиваем ей очищенною строку ячейки массива POSP
                $name = $this->clear_str($_POST['name']);
                
                $password = $this->clear_str($_POST['password']); //тоже что и для name
                
                /*теперь в блоке try проверим есть ли в базе пользователь с таким именем и паролем*/
                try {
                    //получим id пользователя если есть такой если нет сгенерируем мсключение
                    $id = $this->ob_us->get_user($name,$password);
                    
                    //теперь нам надо записать этот id  в свойство $user_id обьекта Model_User
                    $this->ob_us->check_id_user($id);//этот метод будет записывать 
                    
                    /*теперь когда прошили проверки и пользователь такой есть мы сформиркем строку для записи
                    в файл куки,причем записывать эту строку будем в шифрованом виде,и потом ниже перенаправим
                    на страничку admin и там уже проверим файл куки,что там записано и есть ли нужная нам строка*/
                    $this->ob_us->set();//это метод будет устанавливать куки,он находится в Model_User
                    
                    
                    /*теперь когда все проверили и все выполнили куки записали,перенаправим пользователя в админку*/
                    header("Location:".SITE_URL."admin");
                    exit();//и выходим  
                }
                //если нет то перехватим исключение
                catch(AuthException $e) {
                    /*если пользователь ввел не правильные логин или пароль,мы перехватим это исключение
                    и в базе в поле fealtures запишем какието данные или обновим старые*/
                    if($fealtures==NULL) {
                        //тогда обратимся к методу который будет записывать в поле fealtures,прибавлять 1
                        $this->ob_us->insert_fealt($ip_u);//параметром ip этого пользователя
                    }
                    /*если там уже что то было записано то надо обновить а не вставить,тогда вызовим метод update*/
                    else {
                        /*как и выше только к другому методу обращаемся,который будет обновлять*/
                        $this->ob_us->update_fealt($ip_u,$fealtures);//т.е.вторым параметром уже передаем,что записано там    
                    }    
                }   
            }
                
        }    
    }
    
    protected function output() {
                
        //сгенерируем шаблон центральной части
        $this->content = $this->render(VIEW.'Login_page',array(
                                                              'error' => $_SESSION['auth']
                                                              ));
        
        $this->page = parent::output();
        //очистим сессию, ячейку с ошибками
        unset($_SESSION['auth']);
        return $this->page;    
    }    
}


?>