<?php
defined('SHOP') or exit('Access denied');
/*создадим админ_контроллер,который будет заниматься редактированием строниц,добавлением,удалением и редактированием*/
class Admin_Controller extends Base_Admin {

   protected $pages;//для хранения массива страниц
   
   protected $home;//в этом свойстве хранится индефикатор главной странички
   
   protected $contacts;//здесь будем хранить интефикатор страницы контактов
   
   protected $message;//В этом свойстве будем хранить различные информационные сообщения
   //т.к.при выборе страницы для редактирования страниц сюла может приходить id плэтому в метод input могут быть параметры
   
   protected $page_text;//здесь будем хранить массив данных по какой то конкретной странице(заголов.,описание,текст и т.д.)
   
   protected $option = 'add';/*здесь будет храниться действие,которое мы хотим делать и по умолчанию add т.е. добавление
   страницы, а когда мы захотим редактировать страницу,мы этому свойству запишем другое значение- например edit*/
   
   protected $data;//здесь будет массив данных хрвнящихся в сессии при передаче из формы
   
   
   protected function input($param=array()) {
    
        parent::input();
        
        /*сохраним в свойстве $home и в нее сохраним отработку метода который вытаскивает главную страничку*/
        $this->home = $this->ob_m->get_home_page();
        //если выполнилось,т.е. есть массив то
        if(is_array($this->home)) {
            /*т.к.метод get_home_page выбирает много полей,а нам надо только индефикатор,поэтому перезапишем
            свойство $home,что бы там хранился только индефикатор,т.к.переменная home является массивом -после проверки
            то можем сделать так*/
            $this->home = $this->home['pages_id'];    
        }
        
        //теперь для подстведки страницы контактов нам надо id страницы контактов,по аналогии с home
        $this->contacts = $this->ob_m->get_contacts();
        
        if(is_array($this->contacts)) {
            //перезапишем свойство,чтобы там было только id этой страницы
            $this->contacts = $this->contacts['pages_id'];
        }
        
        //////////////////////////////////////////////////////////////////////////
        /*Первым делом как обычно проверяем пришли ли данные методом POST это и ниже уже идет для формы шаблона,
        когда мы добавляем или изменяем страницы и отправляем,а обработчиком будет Admin_Controler если пришли,то мы
        создаем переменные и сохраняем в них соответствующие ячейки массива $_POST*/
        if($this->is_post()) {
            $id = $this->clear_int($_POST['id']);
            $title = $_POST['title'];//мы не очищаем данные т.к в админку злоумышленик не зайдет
            $text = $_POST['text'];
            $keywords = $_POST['keywords'];
            $description = $_POST['description'];
            $position = $this->clear_int($_POST['position']);//эту на всякий случай ичстим,т.к.тут должны быть числа            
            //print_r($_POST);
            //exit();
            /*обьязательными полями для добавления страниц-будут Заголовок и Текст, поэтому проверим если они не пустые
            то будем двигаться дальше*/
            if(!empty($title) && !empty($text)) {
                /*теперь еще проверим была ли нажата кнопка СОХРАНИТЬ она имеет имя add, то идем дальше,т.е если есть
                в массиве $_POST ячейка 'add_x'*/
                if($_POST['add_x']) {
                    /*если да то мы создадим переменую и обратимся к методу модели,который и будет добавлять страничку*/
                    $result = $this->ob_m->add_page($title,$text,$position,$keywords,$description);
                    
                    /*теперь проверим,если метод add_page успешно отработал то в сессии создадим ячейку message 
                     и выведем сообщение*/
                    if($result === TRUE) {
                        $_SESSION['message'] = "Новая страница успешно добавлена!";    
                    }
                    //если какая то ошибка была то выведем другое сообщение
                    else {
                        $_SESSION['message'] = "Ошибка: Данные не добавлены";    
                    }
                    /*после добваления страницы нам надо сделать рэдирект,т.е. перенаправление на чистую страницу админ*/
                    header("Location:".SITE_URL."admin");
                    exit();     
                }
                /*для второго случая,т.е. когда надо редактировать,т.е.нажата кнопка 'edit_x'*/
                if($_POST['edit_x']) {
                    //обратимся к методу из модели,который будет изменять страницы
                    $result = $this->ob_m->edit_page($id,$title,$text,$position,$keywords,$description);
                    
                    /*теперь проверим,если метод add_page успешно отработал то в сессии создадим ячейку message 
                    и выведем сообщение*/
                    if($result === TRUE) {
                        $_SESSION['message'] = "Страница успешно изменена!";    
                    }
                    //если какая то ошибка была то выведем другое сообщение
                    else {
                        $_SESSION['message'] = "Ошибка: Изменения не внесены";                          
                    }
                    /*после добваления страницы нам надо сделать рэдирект,т.е. перенаправление на чистую страницу админ*/
                    header("Location:".SITE_URL."admin/id/".$id);
                    exit();
                }
            }
            //Если не все поля заполнены так же дадим сообщение
            else {
                $_SESSION['message'] = "Заполните все поля!<br />";
                //проверим по полям отдельно каждое,и если поле не пустое то сохраним в сессии то что было в поле
               	if(empty($title))  {
					$_SESSION['message'] .= "Заполните заголовок<br />";//если пустое
				}
				else {
					/*если не пустое то массиве SESSION сохраним ячейку data и в ней ячейку title и там сохраним то,что
                    было введено в поле что бы поле не пропало при обновлении и заново не вносить*/
                    $_SESSION['data']['title'] = $title;
				}	
				if(empty($text))  { 
					$_SESSION['message'] .= "Заполните text<br />";
				}	
				else {
					$_SESSION['data']['text'] = $text;//и для текста так же
				}
                //поля keywords и discription не обьязательные,поэтому без проверки,прросто сохраним в сессии
				$_SESSION['data']['keywords'] = $keywords;
				$_SESSION['data']['description'] = $description;
   	            $_SESSION['data']['position'] = $position;
                /*и теперь в свойстве data сохраним масссив всех данных которые были внесены в поля и теперь при перезагрузке
                страницы если какое то поле было пустое,то заполненные поля останутся и мы их выведем в шаблоне,поэтому
                мы данное свойство передадим шаблону*/
				$this->data = $_SESSION['data'];
                if($_POST['add_x']) {
                    header("Location:".SITE_URL."admin");
                    exit();    
                }
                elseif($_POST['edit_x']) {
                    header("Location:".SITE_URL."admin/id/".$id);
                    exit();
                }			
            }
            ///////////////////////////////////--------------//////////////////
            //теперь для случая изменения Главной страницы или страницы Контактов 
            if($_POST['home_x']) {//т.е. если нажата кнопка Обновить
                
                $new_home_id = $_POST['home_page'];//получаем из формы id той страницы которую выбрали
                //теперь переменную получили и вызываем метод который изменяет страница Главную и Контакты
                $result = $this->ob_m->update_page_option('home',$new_home_id,$this->home);
                
                //и теперь проверим результат работы,что пришло в $result
                if($result === TRUE) {
                        $_SESSION['message'] = "Главная страница успешно изменена!";    
                }
                //если какая то ошибка была то выведем другое сообщение
                else {
                        $_SESSION['message'] = "Ошибка: Изменения на главную страницу не внесены";                          
                }
                /*после добваления страницы нам надо сделать рэдирект,т.е. перенаправление на чистую страницу админ*/
                header("Location:".SITE_URL."admin");
                exit();    
            }
            
             //теперь для случая изменения Главной страницы или страницы Контактов 
            if($_POST['contacts_submit_x']) {//т.е. если нажата кнопка Обновить
                
                $new_contacts_id = $_POST['contacts'];//получаем из формы id той страницы которую выбрали
                //теперь переменную получили и вызываем метод который изменяет страница Главную и Контакты
                $result = $this->ob_m->update_page_option('contacts',$new_contacts_id,$this->contacts);
                
                //и теперь проверим результат работы,что пришло в $result
                if($result === TRUE) {
                        $_SESSION['message'] = "Страница контактов успешно изменена!";    
                }
                //если какая то ошибка была то выведем другое сообщение
                else {
                        $_SESSION['message'] = "Ошибка: Изменения на страницу контактов не внесены";                          
                }
                /*после добваления страницы нам надо сделать рэдирект,т.е. перенаправление на чистую страницу админ*/
                header("Location:".SITE_URL."admin");
                exit();    
            }
            ///////////////////////-----------------------///////////////////////                    
        }
        /////////////////////////////////////////////////////////////////////////
        $this->title .= " Редактирование";
        
        /*сохраним в свойстве pages отработку метода gen_pages из модели*/
        $this->pages = $this->ob_m->get_pages(TRUE);//даем параметр TRUE чтобы метод работал для админки см.модель
               
        /////////////////////////////////////////////////////////////////
        //проверим пришел ли в параметрах id коткретной страницы,т.е.если мы выбрали конкретную страницу для редактирования
        if(isset($param['id'])) {
            //тогда очистим на всякий случай числовые данные создав переменную $id
            $id = $this->clear_int($param['id']);
            //теперь нам надо получить все данные по конкретной странице
            $this->page_text = $this->ob_m->get_page_admin($id);
            //теперь перезапишем свойство option,т.е. укажем ему что мы хотим редактировать страницу
            $this->option = 'edit';
        /////////////////////////////////////////////////////////////////    
            /*здесь еще опишем проверку если нажата кнопка Удалить для ссылки,которая передаетв контролер Admin_Contr
            параметр id и параматр option со значением delete в шаблоне в ссылке прописано для кнопки Удалить*/
            if($param['option'] == "delete") {
                $result = $this->ob_m->delete_page($id);
                //и теперь выведем сообщения или OK или ошибка и сделаем редирект
                if($result === TRUE) {
                    $_SESSION['message'] = "Страница успешно удалена!";    
                }
                //если какая то ошибка была то выведем другое сообщение
                else {
                    $_SESSION['message'] = "Ошибка: Не удалось удалить страницу";    
                }
                /*после удаления страницы нам надо сделать рэдирект,т.е. перенаправление на чистую страницу админ*/
                header("Location:".SITE_URL."admin");
                exit();
            }
        }
               
        //сохраним в свойстве строку хранящуюся в $_SESSIO['message']
        $this->message = $_SESSION['message'];  
    }
    
    protected function output() {
    
         //сгенерируем центральную часть
        $this->content = $this->render(VIEW.'admin/edit_pages',array(
                                                                     'pages' => $this->pages,//массив страниц
                                                                     'home' => $this->home,//индефикатор главной стр.
                                                                     'contacts' => $this->contacts,//индеф.стр.контактов
                                                                     'mes' => $this->message,//наше сообщение о добавлении
                                                                     'page_text' => $this->page_text,//массив данных страницы
                                                                     'option' => $this->option,//т.е.передаем  что мы хотим делать
                                                                     'data' => $this->data//передаем то что введено в поля формы
                                                                     ));
         
        $this->page = parent::output();//записываем в свойство $page отработку родительского метода output 
        /*и возвращаем в класс Base_Controller методу get_page который и занимается выводом на экран*/
        
        //очистим ячейку сессии с сообщением
        unset($_SESSION['message']);
        //и теперь когда массив data успешно передан в шаблон мы очистим сессию
        unset($_SESSION['data']);
        
        return $this->page;    
    }    
}

?>