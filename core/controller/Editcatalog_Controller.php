<?php
defined('SHOP') or exit('Access denied');
/*создадим класс который будет заниматься выводом и изменениями товаров категорий,добавлением товара в категорию
удаления из категории и редактирование товара в категории*/
class Editcatalog_Controller extends Base_Admin {

    protected $option = 'view';// здесь будет храниться строка о действии которое необходимо выполнить
    
    protected $brands;//здесь будет массив наших категорий
    
    protected $id;//здесь будет id категории которую выбрал пользователь
    
    protected $catalog;//массив товаров категории,которую выбрал администратор
    
    protected $navigation;//т.к. выводить товар будем при помощи постраничной навигации
    
    protected $message;
    
    protected $type;//здесь будет строка с типом категории или дочерняя или родительская т.е. или brand или parent
    
    protected $type_cat;//здесь будут типы каталогов
    
    protected $tovar;//Здесь будем хранить массив данных по конкретному товару
    
    protected $tovar_id;//здесь будем хранить индефикатор товара конкретного которой выбрл пользователь для изменения
    
    protected $type_img;//здесь будет формат картинки
   
    protected $data;//здесь будет массив данных которые пользователь ввел в форму
           
    //переопределим как всегда два метода и метод input будет принимать массив параметров как всегда
    protected function input($param = array()) {
    
        parent::input();
        
        $this->title .= "Админка - каталог";
        /*сохраним в свойстве обратившись к методу модели наши категории их массив, это чтобы вывести в списке в 
        правой части наши категории*/
        $this->brands = $this->ob_m->get_catalog_brands();
        
        ///////опишем блок который принимает параметры brand или parent для вывода товаров///////////
        /*т.к. мы используем постраничную навигацию, то мы должны сначала описать прием параметра page, который пере-
        дается через адресную строку,когда мы совершаем навигацию.Поэтому проверим...*/
        if(isset($param['page'])) {
            //то создадим переменную и сохраним значение этой ячейки
            $page = $this->clear_int($param['page']);//очищенное значение на всякий случай
            /*в случае если пользователь ввел в адр.строку не число а строку,то после очситки метод clear_int вернет
            не число а нуль, поэтому для этого случая еще одно условие*/
            if(!$page) {//тут надо уточнить что возвращает clear_int если не число а строка
                $page = 1;//т.е по умолчанию зададим первую страницу 
            }
        }
        else {
            $page = 1;//т.е. если нет то мы по умолчанию зададим первую страницу
        }
        
        
        //для случая когда пользователь кликнет по дочерней категории
        if(isset($param['brand'])) {
            //то запишем в свойство это занчение выбраной категории его id
            $this->id = $this->clear_int($param['brand']);
            
            //запишем в свойство тип категории
            $this->type = 'brand';
            
            /*теперь имея id мы можем с помощью постраничной навигации вывести наши товары*/
            //создадим обьект класса Pager для постраничной навигации и передадим его конструктору параметры
            $pager = new Pager(
                               $page,//номер страницы постраничнгой навигац
                               'tovar',//таблица
                               array('brand_id' => $this->id),//условие 
                               'tovar_id',//сортировка по полю tovar_id
                               'ASC',
                               QUANTITY,
                               QUANTITY_LINKS
                              );
             /*и теперь в свойство $catalog сохраним отработку метода класса Pager, только с проверкой обьект у нас 
             сохранился в $pager или нет*/
             if(is_object($pager)) {
                $this->catalog = $pager->get_posts();
                
                //и также в свойство $navigation сохраним отработку метода класса Pager
                $this->navigation = $pager->get_navigation();   
             }    
        }
        
        //иначе если не brand то
        elseif(isset($param['parent'])) {
            //то запишем в свойство это занчение выбраной категории его id
            $this->id = $this->clear_int($param['parent']);
            //запишем в свойство тип категории
            $this->type = 'parent';
            //теперь отработает момент если нет id
            if(!$this->id) {
                return;//то вернемся из данного метода
            }
            /*теперь нам надо вытащить все индефикаторы дочерних категорий,поэтому создадим переменную и сохраним
            в ней отработку метода модели который вытаскивает и формирует строку индефикаторов всех дочерних категорий*/
            $ids = $this->ob_m->get_child($this->id);            
            /*Для случая когда в адреснуюю строку введет не сущестующий родительский индефикатор - то проверим*/
            if(!$ids) {
                return;
            }            
            //теперь с помощью обьекта класса Pager можем вытащить все товары,которые принадлежат как и родит.так и дочер.категориам
            $pager = new Pager(
                               $page,//номер страницы постраничнгой навигац
                               'tovar',//таблица
                               array('brand_id' => $ids),//условие 
                               'tovar_id',//сортировка по полю tovar_id
                               'ASC',
                               QUANTITY,
                               QUANTITY_LINKS,
                               array("IN")
                              );
             /*и теперь в свойство $catalog сохраним отработку метода класса Pager, только с проверкой обьект у нас 
             сохранился в $pager или нет*/
             if(is_object($pager)) {
                $this->catalog = $pager->get_posts();
                
                //и также в свойство $navigation сохраним отработку метода класса Pager
                $this->navigation = $pager->get_navigation();   
             }    
        }
        /*теперь опишем логику добавления товара по параметру option будем брать, но сначала проверим а есть ли у нас
        параметр id,т.е. выбрана ли категория- не parent и не brand а просто id категории тогда достать все типы товара
        ,т.к. товар кроме категории еще может относиться к разным типа,поэтому обратимся к модели и получим*/
         //теперь проверим какой параметр приходит в option
        if($param['option'] == 'add') {
            //значит в свойство option устанавливаем значение add
            $this->option = 'add';
            //сохраним в свойстве массив типов 
            $this->type_cat = $this->ob_m->get_catalog_type();
               
            if($param['id']) {
                 //сформируем наше свойство -запишем туда индеф.категории
                 $this->id = $this->clear_int($param['id']);
            }                 
        }
        
        /*теперь для случая когда мы будем изменять товар,так же с проверки параметра option*/
        if($param['option'] == 'edit') {
            $this->option = 'edit';
            //сохраним в свойстве массив типов 
            $this->type_cat = $this->ob_m->get_catalog_type();
            
            //теперь проверим пришел ли индефикатор товара,т.е. есть ли ячуйка 'tovar'
            if($param['tovar']) {
                //запишем в свойство индефикатор товара
                $this->tovar_id = $this->clear_int($param['tovar']);
                //теперь обратимся к методу который будет вытаскивать данные по конкретному товару
                $this->tovar = $this->ob_m->get_tovar_admin($this->tovar_id );
                //print_r ($this->tovar);    
            }    
        }
        
        /*Для удаления мы не отправляем ни каких данных методом POST поэтому логику удаления пропишем до проверки
        на приход данных из формы для экономии ресурса скрипта*/
        if($param['option'] == 'delete') {
            //проверяем пришел ли индефикатор товара
            if($param['tovar']) {
                //то сохраним в нашем свойстве индефикатор
                $this->tovar_id = $this->clear_int($param['tovar']);
                
                $this->option = 'delete';
                //отбращаемся к модели и вызываем метод который  удаляет товар из базы
                $result = $this->ob_m->delete_tovar($this->tovar_id);
                
                //теперь проверим что у нас возвращается в результате отработки данного метода
                if($result === TRUE) {
                    $_SESSION['message'] = "Товар успешно удален из базы!<br />";            
                }
                else {
                    $_SESSION['message'] = "Ошибка: Товар не удален!<br />";
                }
                
                /*теперь для того чтобы перенаправить обратно на ту страницу где были,т.к. у нас может товар быть 
                в дочерней или родительской категории то проверим с помощью ф-ии которая ищет определенный ключ в массиве*/
                if(array_key_exists('brand',$param)) {
                    header("Location:".SITE_URL.'editcatalog/brand/'.$param['brand']);    
                }
                elseif(array_key_exists('parent',$param)) {
                    header("Location:".SITE_URL.'editcatalog/parent/'.$param['parent']);    
                }
                exit();                     
            }
        }
        
        /*теперь проверим данные прищли методом POST или нет*/
        if($this->is_post()) {
            //создадим переменые которые соотвествуют каждой ячейки POST
            $id = $this->clear_int($_POST['id']);
            $title = $_POST['title'];
            $anons = $_POST['anons'];
            $text = $_POST['text'];
            $type = $_POST['type'];
            $new_type = $_POST['new_type'];
            $publish = $_POST['publish'];
            $keywords = $_POST['keywords'];
            $description = $_POST['description'];
            $price = $this->clear_int($_POST['price']);//очистим т.к.туда должно попадать число
            $category = $_POST['category'];
            //print_r ($_POST);
            //теперь напишем условие для обьязательных заполняемых полей
            if(!empty($title) && !empty($anons) && !empty($text) && !empty($price)) {
                               
                /*теперь проверим а ввел ли вообще админ какуюто картинку,т.е. проверим поле массива временого файла
                куда попадает картинка при загрузке на сервер*/
                if(empty($_FILES['img']['tmp_name'])) {
                    /*то мы тогда создадим переменную img и зададим имя файла по умолчанию какуюто картинку,т.е. если 
                    пользователь не хотел вставлять картинку то что какаято картинка ставилась бы по умолчанию*/
                    $img = NOIMAG;//т.е. константа где имя картинки по умолчанию    
                }
                /*иначе,если загрузил то мы средствами php проверим не превышает ли размер картинки заданных нами,
                т.к. то поле hiden где в форме указывается максим.размер можно легко обойти,поэтому еще и php проверим*/
                else {
                    /*если все поля записаны,то проверим не записаны ли ошибки в суперглобальном массиве $_FILES его ячейка
                    error,т.е.когда изображение больше того размера который мы укзали в форме то оно не загрузится на сервер*/
                    if(!empty($_FILES['img']['error'])) {
                         $_SESSION['message'] = "Слишком большое изображение!<br />";
                         header("Location:".SITE_URL.'editcatalog/option/add/id/'.$this->id);
                         exit();    
                    }
                    /*если бы нам нужно было чтоба разные форматы изобр.грузились бы,то перед проверкой еоторая ниженам надо было бы
                    создать массив из строк которые могут быть(array('image/jpeg','image/png')) и затем проверять есть ли в масиве нужные
                    нам строка и ниже где вызываем метод img_resize()передавать ему еще и параметр type, а в самом методе через кон-
                    струкцию иф перепирать вызов разных ф-й записи для разных изображ.*/
                    /*т.к. мы используем только формат jpeg то проверим исходный файл в этом формате или нет*/
                    $img_types = array('jpeg' => 'image/jpeg');//создаем массив с форматами,если надо можно в нем прописать и др.
                    /*обратимся к свойству и сохраним в нем отработку метода который занимается поиском в массиве
                    которая если найдет в массиве искомое вернет ключ,т.е.в свойство запишется jpeg*/                    
                    $this->type_img = array_search($_FILES['img']['type'],$img_types);
                    
                    if(!$this->type_img) {
                         $_SESSION['message'] = "Не верный формат изображения!<br />";
                         header("Location:".SITE_URL.'editcatalog/option/add/id/'.$this->id);
                         exit();    
                    }
                    
                    if($_FILES['img']['size'] > (2 * 1024 *1024)) {
                         $_SESSION['message'] = "Слишком большое изображение!<br />";
                         header("Location:".SITE_URL.'editcatalog/option/add/id/'.$this->id);
                         exit();     
                    }
                    /*теперь когда все нормально картинка есть и загружена в папку temp т.е. временною, нам надо ее
                    уже скопировать в нашу папку images, для этого воспользуемся ф-ей только с проверкой*/
                    if(!move_uploaded_file($_FILES['img']['tmp_name'],UPLOAD_DIR.$_FILES['img']['name'])) {
                        /*если этот if сработал,т.е. вернет fulse, то запишем сообщение*/
                        $_SESSION['message'] = "Ошибка копирования изображения!<br />";
                        header("Location:".SITE_URL.'editcatalog/option/add/id/'.$this->id);
                        exit();    
                    }
                    /*если if не сработал,т.е. все хорошо переместилось мы вызовем метод по уменьшению изображения
                    который находится в Base_Controller и параметром ему дадим путь к изображению,куда переместил*/
                    $res_img = $this->img_resize(UPLOAD_DIR.$_FILES['img']['name'],$this->type_img);
                    
                    //теперь проверим нам метод вернул false или true и от этого пойдем дальше
                    if($res_img !== FALSE) {
                        //если TRUE то мы в нашу переменную $img где по умолчанию имя картинки,сохраним имя которое получим
                        $img = $res_img;
                        //и теперь осталось удалить то исходное большое изображение
                        unlink(UPLOAD_DIR.$_FILES['img']['name']);//путь к исходному изображ.   
                    }
                    //исначе если вернет метод img_resize false то...
                    else {
                        $_SESSION['message'] = "Ошибка создания миниатюры изображения!<br />";
                        header("Location:".SITE_URL.'editcatalog/option/add/id/'.$this->id);
                        exit();     
                    }
                }
                
                /*теперь когда все проверки произведены,изображение умеьшено можно и заняться непосредственно дабавлен-
                нием в базу данных,поэтому проверим,если нажата кнопка Сохранить то...*/
                if($this->option == 'add') {
                    //теперь еще проверим создает ли пользователь новый тип товаров или использует существующие
                    if(!empty($new_type)) {
                        /*то создадим переменую и выовем метод,который создает в базе новый тип товара*/
                        $type = $this->ob_m->add_new_type($new_type);//параметром значение поля формы под этим именем    
                    }
                    /*теперь у нас в $type индефи.созданого типа,теперь мы можем уже вставить товар в это тип*/
                    $result = $this->ob_m->add_goods(
                                                     $this->id,//индефикатор категории к которой привьязываем товар
                                                     $title,//название
                                                     $anons,//
                                                     $text,//
                                                     $img,//имя изображения
                                                     $type,//это id типа товара
                                                     $publish,
                                                     $price,
                                                     $keywords,
                                                     $description
                                                    );
                    //теперь проверим что у нас возвращается в результате отработки данного метода
                    if($result === TRUE) {
                        $_SESSION['message'] = "Товар успешно добавлен в базу данных!<br />";            
                    }
                    else {
                        $_SESSION['message'] = "Ошибка: Товар не добавлен!<br />";
                    }
                    header("Location:".SITE_URL.'editcatalog');
                    exit();        
                }
                
                //теперь для случая редактирования товара
                if($this->option == 'edit') {
                    //теперь еще проверим создает ли пользователь новый тип товаров или использует существующие
                    if(!empty($new_type)) {
                        /*то создадим переменую и выовем метод,который создает в базе новый тип товара*/
                        $type = $this->ob_m->add_new_type($new_type);//параметром значение поля формы под этим именем    
                    }
                    /*теперь если пользователь изображение не меняет,т.е. оставляет то что было в базе,значит поле
                    для изображения будет пустым и проверка выше в add по умолчанию присвоит стандартную картинку ему
                    а нам этого не надо,нам надо оставить тоже, поэтому сделаем так*/
                    if($img == NOIMAG ) {
                        //то что бы не переписала в базе 
                        $img = FALSE;    
                    }
                    //теперь осталось вызвать методкоторый будет исзменять данные в базе-обновлять
                    $result = $this->ob_m->edit_goods(
                                                     $id,//индефикатор категории к которой привьязываем товар
                                                     $title,//название
                                                     $anons,//
                                                     $text,//
                                                     $img,//имя изображения
                                                     $type,//это id типа товара
                                                     $publish,
                                                     $price,
                                                     $category,
                                                     $keywords,
                                                     $description
                                                    );
                    //теперь проверим что у нас возвращается в результате отработки данного метода
                    if($result === TRUE) {
                        $_SESSION['message'] = "Товар успешно изменен!<br />";            
                    }
                    else {
                        $_SESSION['message'] = "Ошибка: Товар не изменен!<br />";
                    }
                    header("Location:".SITE_URL.'editcatalog');
                    exit();     
                }      
            }
            //иначе если какое то поле пустое то
            else {
  	            $_SESSION['message'] = "Заполните все поля!<br />";
                //проверим по полям отдельно каждое,и если поле не пустое то сохраним в сессии то что было в поле
               	if(empty($title))  {
					$_SESSION['message'] .= "Заполните заголовок<br />";
				}
				else {
                    $_SESSION['data']['title'] = $title;
				}
				if(empty($anons))  { 
					$_SESSION['message'] .= "Заполните анонс<br />";
				}
				else {
					$_SESSION['data']['anons'] = $anons;
				}	
				if(empty($text))  { 
					$_SESSION['message'] .= "Заполните text<br />";
				}	
				else {
					$_SESSION['data']['text'] = $text;
				}
   	            if(empty($price))  { 
					$_SESSION['message'] .= "Заполните price<br />";
				}	
				else {
					$_SESSION['data']['price'] = $price;
				}
                
				$_SESSION['data']['keywords'] = $keywords;
				$_SESSION['data']['description'] = $description;
               
				$this->data = $_SESSION['data'];
                
                //header("Location:".SITE_URL.'editcatalog/option/add/id/'.$this->id);
                //exit();                                
            }                     
        }
        //сохраним в свойстве строку хранящуюся в $_SESSIO['message']
        $this->message = $_SESSION['message']; 
}    
    protected function output() {
        
        /*сформируем переменную $previous это для постраничной навигации чтобы при переходе на следующую страницу
        передавать в адресную строку предыдущее состояние -например brand/2 или parent/1*/
        $previous = "/".$this->type."/".$this->id;
        
        //подгрузим шаблон центральной и правой части
        $this->content = $this->render(VIEW.'admin/edit_catalog',array(
                                                                      'option' => $this->option,
                                                                      'brands' => $this->brands,
                                                                      'category' => $this->id,
                                                                      'goods' => $this->catalog,//массив товаров категории
                                                                      'navigation' => $this->navigation,
                                                                      'previous' => $previous,//для ссылок навигации
                                                                      'mes' => $this->message,
                                                                      'type_cat' =>$this->type_cat,
                                                                      'data' => $this->data,
                                                                      'tovar' => $this->tovar                                                                    
                                                                      ));
        
        //тут обращаемся к свойству page и в него сохраняем отработку родительского метода output
        $this->page = parent::output();
        
        unset($_SESSION['message']);
        //и теперь когда массив data успешно передан в шаблон мы очистим сессию
        unset($_SESSION['data']);
        
        return $this->page;
    }    
}

?>