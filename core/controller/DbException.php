<?php
defined('SHOP') or exit('Access denied');
/*Этот класс создается для обработки ошибок связанных с неправильным подключением к базе данных, он по
анналогии с классом ContrException */

class DbException extends Exception {
    
    protected $message;//Тут будем хранить сообщение об ошибке,т.е.напр."Такой страницы не существует"
    
    /*Опишем конструктор,т.е.что необходимо делать ,когда мы создаем обьект этого класса, параметром в
    конструктор будет попадать $text т.е.то что выводится на экран при ошибке и это все запишется в файл
     logo.php,а пользователю выведется только строка об ошибке*/
    public function __construct($text) {
        
        /*Сначала сохраним в наще свойсво $message то значение которое мы получим при создании обьекта
        этого класса,там где генерируем исключение,т.е. наш параметр $text*/
        $this->message = $text;
        
        /*теперь создадим перем.,где будет хранить имя файла в котором произошла ошибка,для этого обратимся к
        методу класса Exception*/
        $file = $this->getFile();
        //теперь тоже для линии в которой произошла ошибка
        $line = $this->getLine();
        
        /*теперь сохраним эти значения,сохраним их в сессии,обратимся к массиву SESSION  ив нем создадим
        чейку error и в нем ячейку file и сохрвним туда нашу переменную $file*/
        $_SESSION['error']['file'] = $file;
        //тоже для линии 
        $_SESSION['error']['line'] = $line;
            
        /*теперь,когда мы сгенерировали ошибку,обработали ее,т.е. получили данные в каком файле и строке и по-
        лучили текст ошибки, мы сразу же перенаправляем нашего пользователя на контроллер который выведет это
        сообщение об ошибке.Передаем заголовок о перенаправлении с путем к нашему контроллеру error,
        который выведет сообщение об ошибке и этому контр.передадим параметром mes где будем хранить текст
        об ошибке в зашифрованом виде*/
        header("location:".SITE_URL.'error/mes/'.urlencode($text));    
    }
}

?>